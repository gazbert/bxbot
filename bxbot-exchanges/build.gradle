description = 'BX-bot Exchange Adapters'

dependencies {

    implementation project(':bxbot-trading-api')
    implementation project(':bxbot-exchange-api')

    implementation libraries.spring_boot_starter
    implementation libraries.spring_boot_starter_log4j2
    implementation libraries.google_gson
    implementation libraries.google_guava
    implementation libraries.javax_xml_api
    implementation libraries.javax_xml_impl

    testImplementation libraries.powermock_junit
    testImplementation libraries.powermock_api_easymock
    testImplementation libraries.easymock
    testImplementation libraries.junit_vintage_engine
    testImplementation libraries.spring_boot_starter_test
}

//sourceSets {
//    integrationTest {
//        compileClasspath += main.output + test.output
//        runtimeClasspath += main.output + test.output
//
//        java.srcDir 'src/integration-test/java'
//        resources.srcDir 'src/integration-test/resources'
//    }
//}
//
////configurations {
////    integrationTestCompile.extendsFrom compileClasspath
////    integrationTestRuntime.extendsFrom runtimeClasspath
////}
//
//task integrationTests(type: Test) {
//
//    testClassesDirs = sourceSets.integrationTest.output.classesDirs
//    classpath = sourceSets.integrationTest.runtimeClasspath
//
//    testLogging {
//        events "passed", "skipped", "failed"
//    }
//}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            // Ignore classes tested using Powermock. JaCoCo won't/can't instrument them:
            // "... right now there is NO WAY TO USE PowerMock with JaCoCo On-the-fly instrumentation."
            // See https://github.com/powermock/powermock/wiki/Code-coverage-with-JaCoCo
            excludes = [
                    'com.gazbert.bxbot.exchanges.BitfinexExchangeAdapter*',
                    'com.gazbert.bxbot.exchanges.BitstampExchangeAdapter*',
                    'com.gazbert.bxbot.exchanges.GeminiExchangeAdapter*',
                    'com.gazbert.bxbot.exchanges.ItBitExchangeAdapter*',
                    'com.gazbert.bxbot.exchanges.KrakenExchangeAdapter*',
                    'com.gazbert.bxbot.exchanges.TestExchangeAdapter*',
                    'com.gazbert.bxbot.exchanges.AbstractExchangeAdapter*',
                    'com.gazbert.bxbot.exchanges.CoinbaseProExchangeAdapter*',
            ]
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.3
            }
        }
    }
}